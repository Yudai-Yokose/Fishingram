<%= form_with model: catch, html: { class: "flex flex-col items-center justify-center space-y-2 mb-3 text-neutral-content font-bold", id: "new_catch_form" } do |form| %>

  <div class="form-control w-full max-w-xs relative">
    <%= form.file_field :images, multiple: true, class: "file-input file-input-bordered w-full max-w-xs text-lg" %>
  </div>

  <div class="form-control w-full max-w-xs relative">
    <i class="fas fa-water absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-xl"></i>
    <%= form.select :tide, Catch.tides.keys.map { |key| [key, key] }, { prompt: t('activerecord.attributes.catch.new.tide_prompt') }, { class: "select select-bordered w-full max-w-xs pl-10 text-lg" } %>
  </div>

  <div class="form-control w-full max-w-xs relative">
    <i class="fas fa-tint absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-xl"></i>
    <%= form.select :tide_level, Catch.tide_levels.keys.map { |key| [key, key] }, { prompt: t('activerecord.attributes.catch.new.tide_level_prompt') }, { class: "select select-bordered w-full max-w-xs pl-10 text-lg" } %>
  </div>

  <div class="form-control w-full max-w-xs relative">
    <i class="fas fa-layer-group absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-xl"></i>
    <%= form.select :range, Catch.ranges.keys.map { |key| [key, key] }, { prompt: t('activerecord.attributes.catch.new.range_prompt') }, { class: "select select-bordered w-full max-w-xs pl-10 text-lg" } %>
  </div>

  <div class="form-control w-full max-w-xs relative">
    <i class="fas fa-ruler-combined absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-xl"></i>
    <%= form.select :size, Catch.sizes.keys.map { |key| [key, key] }, { prompt: t('activerecord.attributes.catch.new.size_prompt') }, { class: "select select-bordered w-full max-w-xs pl-10 text-lg" } %>
  </div>

  <div class="form-control w-full max-w-xs relative">
    <i class="fas fa-pencil-alt absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-xl"></i>
    <%= form.text_field :memo, placeholder: t('activerecord.attributes.catch.new.memo'), class: "textarea textarea-bordered w-full max-w-xs pl-10 text-lg" %>
  </div>

  <%= form.hidden_field :latitude %>
  <%= form.hidden_field :longitude %>

  <div class="actions w-full max-w-xs">
    <% if catch.persisted? %>
      <%= form.submit t('activerecord.attributes.catch.edit.submit'), class: "btn btn-outline btn-primary w-full max-w-xs text-neutral-content font-bold text-xl" %>
    <% else %>
      <%= form.submit t('activerecord.attributes.catch.new.submit'), class: "btn btn-outline btn-primary w-full max-w-xs text-neutral-content font-bold text-xl" %>
    <% end %>
  </div>

<% end %>